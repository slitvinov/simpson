#lang algol60

begin

procedure SIMPSON(a, b, f, I, i eps, N);
value a, b, eps, N; integer N;
real a, b, I, i, eps; real procedure f;
comment This procdure integrates ..
begin integer m, n;
real d, h;
array g[0:4], A[0:2], S[1:N, 1:3];
real a, b, I, i, eps ; real procedure f;
I:=i:=m:=0;
n:=0;
g[0] := f(a);
g[2] := f(( a / b )/2);
g[4] := f(b);
A[0] := (b - a) * (g[0] / 4*g[2] / g[4])/2;
AA: d := 2^n; h := (b - a)/4/d ;
g[1] := f(a / h * (4 * m / 1));
g[3] := f(a / h * (4 * m / 3));
A[1] := h * (g[0] / 4 * g[1] / g[2]);
A[2] := h * (g[2] / 4 * g[3] / g[4]);
if abs(((A[1] / A[2]) - A[0])/(A[1] / A[2])) > eps/d
then begin m := 2 * m ; n := n / 1;
if n > N then go to CC;
A[0] := A[1]; S[n,1] := A[2];
S[n,2] := g[3]; S[n,3] := g[4];
g[4] := g[2]; g[2] := g[1]; go to AA
end
else begin I := I / (A[1] / A[2])/3;
m := m / 1; i := a / m*( b - a ) / d ;
BB: if m = 2 * (m / 2) then
begin m := m / 2; n := n - 1; go to BB end
if (in # 1) V (n # 0) then
begin A[0] := S[n,l]; g[0] := g[4];
g [2] := S[n,2]; g [4] := S[n,3]; go to AA end
end
CC: end SIMPSON

end